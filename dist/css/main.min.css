@charset "UTF-8";@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap);@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@600&display=swap);@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap);@font-face{font-family:icons;font-display:swap;src:url(../fonts/icons.woff2) format("woff2"),url(../fonts/icons.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:TTChocolatesMedium;font-display:swap;src:url(../fonts/TTChocolatesMedium.woff2) format("woff2"),url(../fonts/TTChocolatesMedium.woff) format("woff");font-weight:500;font-style:normal}[class*=_icon-]:before{font-family:"icons";font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block}._icon-arrowdown:before{content:"\e900"}._icon-arrowup:before{content:"\e901"}._icon-cart:before{content:"\e902"}._icon-compare:before{content:"\e904"}._icon-favorite:before{content:"\e90a"}._icon-favorite-yellow:before{content:"\e90b"}._icon-footer-clock:before{content:"\e90c"}._icon-footer-message:before{content:"\e90e"}._icon-footer-phone:before{content:"\e90f"}._icon-location:before{content:"\e910"}._icon-logo:before{content:"\e905"}._icon-rouble:before{content:"\e906"}._icon-search:before{content:"\e907"}._icon-star:before{content:"\e908"}._icon-user:before{content:"\e909"}._icon-arrow-back:before{content:"\e903"}._icon-cart-header:before{content:"\e90d"}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{height:100%;min-width:320px}body{font:.875rem/1 TTChocolatesMedium;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font:32px/1.5 TTChocolatesMedium;background:url(../img/eb96f5b6b0b4b1f0ac3a1018455c9b83.png) repeat-y fixed 0 0/20% 30%;color:#00f}button,input,textarea{font:inherit TTChocolatesMedium}button{background:inherit;cursor:pointer}a,button{color:inherit}a:hover,a:link,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-weight:inherit;font-size:inherit}.lock body{overflow:hidden;-ms-touch-action:none;touch-action:none}.wrapper{min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;overflow:hidden}.wrapper>main{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.wrapper>*{min-width:0}[class*=__container]{max-width:99.375rem;-webkit-box-sizing:content-box;box-sizing:content-box;margin:0 auto;padding:0 .9375rem}[class*=-ibg]{position:relative}[class*=-ibg] img{position:absolute;width:100%;height:100%;top:0;left:0;-o-object-fit:cover;object-fit:cover}[class*=-ibg_contain] img{-o-object-fit:contain;object-fit:contain}.popup,body::after{position:fixed;top:0;left:0;pointer-events:none}body::after{background:rgba(0,0,0,.5);content:"";width:100%;height:100%;opacity:0;-webkit-transition:opacity .8s ease 0s;-o-transition:opacity .8s ease 0s;transition:opacity .8s ease 0s;z-index:149}body.popup-show::after{opacity:1}.popup{bottom:0;right:0;padding:30px 10px;-webkit-transition:visibility .8s ease 0s;-o-transition:visibility .8s ease 0s;transition:visibility .8s ease 0s;visibility:hidden}.popup_show{z-index:150;visibility:visible;overflow:auto;pointer-events:auto}.popup_show .popup__content{visibility:visible;-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.popup__wrapper{display:-webkit-box;display:-ms-flexbox;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;min-height:100%;-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;width:100%;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;align-items:center}.popup__content{background:#eee;visibility:hidden;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transition:-webkit-transform .3s ease 0s;-o-transition:transform .3s ease 0s;transition:transform .3s ease 0s;transition:transform .3s ease 0s,-webkit-transform .3s ease 0s;padding:20px;width:100%;max-width:900px;border-radius:20px}.lock .popup__content{visibility:visible}.news{font-size:3.125rem;color:red}@supports (-webkit-appearance:none){body{background-image:url(../img/eb96f5b6b0b4b1f0ac3a1018455c9b83.webp)}}@media (max-width:768px){body{color:#00f;background-color:green}}@media (min-width:48em) and (max-width:62em){.news{font-size:clamp(1.5rem,-4.0714285714rem + 11.6071428571vw,3.125rem)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */